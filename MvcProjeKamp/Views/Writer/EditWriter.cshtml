@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm("EditWriter", "Writer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group">

        @Html.HiddenFor(x => x.WriterID)

        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName)
        <br />

        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurName)
        <br />

        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.WriterEmail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterEmail)
        <br />

        @Html.Label("Yazar Şifresi")
        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword)
        <br />

        @Html.Label("Görsel")
        <input type="file" name="WriterImage" value="WriterImage" class="form-control" />
        @Html.ValidationMessageFor(x => x.WriterImage)
        <br />

        @Html.Label("Yazar Ünvan")
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle)
        <br />

        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout)
        <br />
        <button class="btn btn-sm btn-success">Değişikliği Kaydet</button>
    </div>
}
